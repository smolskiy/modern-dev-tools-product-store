services:
  catalog-service:
    build: ./catalog-service
    platform: linux/amd64
    container_name: catalog-service
    ports:
      - "8081:8080"  # Пробрасываем порт для доступа к Catalog Service
    networks:
      - microservice_default
    restart: unless-stopped
    environment:
      - DB_HOST=catalog-db
      - DB_USER=postgres
      - DB_PASSWORD=secret
      - DB_NAME=catalog
    depends_on:
      - catalog-db  # Сначала должен быть запущен сервис базы данных
    command: ["./catalog-service"]

  catalog-db:
    image: postgres:13
    container_name: catalog-db
    environment:
      POSTGRES_DB: catalog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"  # Пробрасываем порт для доступа к базе данных
    networks:
      - microservice_default
    volumes:
      - catalog-db-data:/var/lib/postgresql/data  # Персистентные данные для базы

  order-service:
    build: ./order-service
    platform: linux/amd64
    container_name: order-service
    ports:
      - "8082:8080"  # Пробрасываем порт для доступа к Order Service
    networks:
      - microservice_default
    restart: unless-stopped
    environment:
      - DB_HOST=order-db
      - DB_USER=mysql
      - DB_PASSWORD=secret
      - DB_NAME=orders
    depends_on:
      - order-db  # Сначала должен быть запущен сервис базы данных
    command: ["./order-service"]
  order-db:
    image: mysql:8

    container_name: order-db
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: orders
    ports:
      - "3306:3306"  # Пробрасываем порт для доступа к базе данных
    networks:
      - microservice_default
    volumes:
      - order-db-data:/var/lib/mysql  # Персистентные данные для базы

networks:
  microservice_default:
    driver: bridge

volumes:
  catalog-db-data:
  order-db-data:
